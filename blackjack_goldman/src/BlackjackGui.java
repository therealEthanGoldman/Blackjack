
import Cards.Card;
import Game.Table;
import static java.lang.System.exit;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nexev
 */
public class BlackjackGui extends javax.swing.JFrame {

    /**
     * Creates new form BlackjackGui
     */
    public enum States{
        GAMESTART,
        CHECKP21,
        CHECKD21,
        PLAYERTURN,
        DEALERTURN,
        BUST,
        END;
    }
    private States state;
    private Table game;
    
    public BlackjackGui() {
        initComponents();
        game = new Table();
        state = States.GAMESTART;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        yesbutton = new javax.swing.JButton();
        nobutton = new javax.swing.JButton();
        Dhand = new javax.swing.JLabel();
        situation = new javax.swing.JLabel();
        Phand = new javax.swing.JLabel();
        question = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        yesbutton.setText("Yes");
        yesbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesbuttonActionPerformed(evt);
            }
        });

        nobutton.setText("No");
        nobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nobuttonActionPerformed(evt);
            }
        });

        Dhand.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Dhand.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        situation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Phand.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Phand.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        question.setText("Do you want to play a game?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(yesbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                .addComponent(nobutton)
                .addGap(79, 79, 79))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(situation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Dhand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Phand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(question, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Dhand, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(situation, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(Phand, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(question, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nobutton)
                    .addComponent(yesbutton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void yesbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesbuttonActionPerformed
        if ((state == States.GAMESTART) ||
            (state == States.BUST)      ||
            (state == States.CHECKP21)  ||
            (state == States.CHECKD21)  ||
            (state == States.END)){
            game = new Table();
            game.start();
            if (game.checkPly21())
                state = States.CHECKP21;
            else if (game.checkDealer21())
                state = States.CHECKD21;
            else{
                state = States.PLAYERTURN;
            }
        } else if (state == States.PLAYERTURN) {
            game.playerhits();
            if (game.getPlyrHand().value() > 21)
                state = States.BUST;
        }
        refreshViews();
    }//GEN-LAST:event_yesbuttonActionPerformed

    private void nobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nobuttonActionPerformed
        
        if (state == States.PLAYERTURN) {
            state = States.DEALERTURN;
            game.dealersTurn();
            state = States.END;
        }
        else if ((state == States.GAMESTART) ||
                (state == States.BUST)  ||
                (state == States.CHECKD21) ||
                (state == States.CHECKP21) ||                
                (state == States.END))
            exit(0);
        refreshViews();
    }//GEN-LAST:event_nobuttonActionPerformed

    private void refreshViews() {
        switch (state) {
            case BUST:
                situation.setText("You Busted. Game Over");
                question.setText("Do you want to try again?");
                HandViews(false);
                break;
            case PLAYERTURN:
                situation.setText("Your hand's value = " + game.getPlyrHand().value());
                question.setText("Do you want another card");
                HandViews(true);
                break;
            case END:
                int playerScore = game.getPlyrHand().value();
                int dlrScore = game.getDlrHand().getHandValue();
                String promptString = "Your hand = " + playerScore +
                        " Dealer\'s hand = " + dlrScore + " \n";
                if ((playerScore > dlrScore) || (dlrScore >21)){
                    promptString = promptString + "You Won!!";
                }
                else if (playerScore == dlrScore){
                    promptString = promptString + "It is a tie.";
                }
                else{
                    promptString = promptString + "The dealer wins.";
                }
                situation.setText(promptString);
                question.setText("Do you want to try again?");
                HandViews(false);
                break;
            case CHECKP21:
                situation.setText("You got Blackjack! Woohoo!");
                question.setText("Play Again?");
                HandViews(false);
                break;
            case CHECKD21:
                situation.setText("Dealer got Blackjack. Boo.");
                question.setText("Try Again?");
                HandViews(false);
                break;
            default:
                situation.setText("");
                question.setText("");
                HandViews(true);
                break;
        }    
    }
    
    private void HandViews( boolean hide){
        String plrShowing = "You: ";
        String dlrShowing = "Dlr: ";
        List<Card> cards = game.getPlyrHand().getHand();
        for (Card c: cards) {
            plrShowing += c.toString();
        }
        cards = game.getDlrHand().getHand();
        for (Card c: cards) {
            if (hide) {
                hide = false;
                dlrShowing += "[??] ";
            }else{
                dlrShowing += c.toString();
            }
        }
        Phand.setText(plrShowing);
        Dhand.setText(dlrShowing);
    }
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlackjackGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlackjackGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlackjackGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlackjackGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackjackGui().setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Dhand;
    private javax.swing.JLabel Phand;
    private javax.swing.JButton nobutton;
    private javax.swing.JLabel question;
    private javax.swing.JLabel situation;
    private javax.swing.JButton yesbutton;
    // End of variables declaration//GEN-END:variables
}
